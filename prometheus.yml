# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
           # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  # Removing prometheus job as it is likely not required for Ultrafeeder
  #- job_name: "prometheus"
  #  static_configs:
  #    - targets: ["localhost:9090"]
  ## if self scraping is needed in future, add as a 3rd target in the job below
  ## changing the job_name from "ultrafeeder" to GS_ID instead
  ## this is to eliminate the out of order error.
  - job_name: "<GS_ID>"
    static_configs:
      - targets: ["localhost:9273", "localhost:9274"]

remote_write:
  - url: https://aps-workspaces.us-east-1.amazonaws.com/workspaces/ws-8252a996-7415-443d-b9c5-08062fd4ed80/api/v1/remote_write
    sigv4:
      region: 'us-east-1'
      access_key: '<GS_ACCESSKEY>'
      secret_key: '<GS_SECRETKEY>'
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500
